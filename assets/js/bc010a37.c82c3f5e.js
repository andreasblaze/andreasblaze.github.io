"use strict";(self.webpackChunktech_notes=self.webpackChunktech_notes||[]).push([[9788],{324:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var t=n(4848),a=n(8453);const o={sidebar_position:1},r="Postgres",i={id:"databases/postgres",title:"Postgres",description:"Log in to PostgreSQL",source:"@site/docs/databases/postgres.md",sourceDirName:"databases",slug:"/databases/postgres",permalink:"/databases/postgres",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Concepts",permalink:"/databases/concepts"},next:{title:"Docker",permalink:"/category/docker"}},c={},l=[{value:"Log in to PostgreSQL",id:"log-in-to-postgresql",level:2},{value:"Create the User",id:"create-the-user",level:2},{value:"Granting Necessary Permissions",id:"granting-necessary-permissions",level:2},{value:"Backup",id:"backup",level:2},{value:"Postgres connection issue",id:"postgres-connection-issue",level:2},{value:"Configure pg_hba.conf (HBA stands for host-based authentication)",id:"configure-pg_hbaconf-hba-stands-for-host-based-authentication",level:2},{value:"Reload PostgreSQL Configuration",id:"reload-postgresql-configuration",level:2},{value:"Verify PostgreSQL is Listening Correctly",id:"verify-postgresql-is-listening-correctly",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"postgres",children:"Postgres"}),"\n",(0,t.jsx)(s.h2,{id:"log-in-to-postgresql",children:"Log in to PostgreSQL"}),"\n",(0,t.jsx)(s.p,{children:"First, you need to log in to your PostgreSQL server as a superuser, usually postgres. You can do this from the command line:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"psql -U postgres\n"})}),"\n",(0,t.jsx)(s.h2,{id:"create-the-user",children:"Create the User"}),"\n",(0,t.jsxs)(s.p,{children:["Use the ",(0,t.jsx)(s.code,{children:"CREATE ROLE"})," or ",(0,t.jsx)(s.code,{children:"CREATE USER"})," command to create a new user. The ",(0,t.jsx)(s.code,{children:"CREATE USER"})," command is a shortcut for ",(0,t.jsx)(s.code,{children:"CREATE ROLE"})," with the ",(0,t.jsx)(s.code,{children:"LOGIN"})," attribute enabled, which is usually what you want for a backup user."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"CREATE USER backup_user WITH PASSWORD 'secure_password';\n"})}),"\n",(0,t.jsx)(s.h2,{id:"granting-necessary-permissions",children:"Granting Necessary Permissions"}),"\n",(0,t.jsx)(s.p,{children:"Depending on what the user needs to do, you'll grant different permissions. For running backups with pg_basebackup, the user needs replication privileges."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"ALTER ROLE backup_user REPLICATION;\n"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash"})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash"})}),"\n",(0,t.jsx)(s.h2,{id:"backup",children:"Backup"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"pg_basebackup -X fetch --format=tar -h localhost -U postgres -D - | lbzip2 -n 6 -9 > backup.tar.bz2\n"})}),"\n",(0,t.jsx)(s.p,{children:"This command does the following:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"-X fetch: Includes all required WAL files in the backup. This can also be -X stream which streams WAL records required to make the backup consistent, but since you are using stdout for your directory, it's safer to use fetch here."}),"\n",(0,t.jsx)(s.li,{children:"-D -: The directory parameter is set to stdout, indicated by -."}),"\n",(0,t.jsx)(s.li,{children:"| lbzip2 -n 6 -9 > backup.tar.bz2: This pipes the output of pg_basebackup directly to lbzip2 for compression with settings for high compression (option -9), and outputs the compressed backup to backup.tar.bz2."}),"\n"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'pg_basebackup -X fetch --format=tar -d "host=localhost user=postgres sslmode=disable" -D - | lbzip2 -n 6 -9 > ~/backup/backup.tar.bz2\n'})}),"\n",(0,t.jsx)(s.p,{children:"This command specifies the host, user, and SSL mode directly in the connection string:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"-d sets the connection string."}),"\n",(0,t.jsx)(s.li,{children:'"host=localhost user=postgres sslmode=disable" specifies that the connection is to localhost, as the user postgres, with SSL disabled.'}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"postgres-connection-issue",children:"Postgres connection issue"}),"\n",(0,t.jsxs)(s.p,{children:["The error ",(0,t.jsx)(s.strong,{children:'pg_basebackup: error: connection to server at "localhost" (::1), port 5432 failed: FATAL: no pg_hba.conf entry for replication connection from host "::1", user "postgres"'}),", SSL off suggests that the PostgreSQL server's pg_hba.conf file does not have an entry allowing replication connections from the localhost (::1) for the user postgres without SSL."]}),"\n",(0,t.jsx)(s.p,{children:"To resolve this, you need to edit the pg_hba.conf file"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'psql -U postgres -c "SHOW config_file;"\n'})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'psql -U postgres -c "SHOW hba_file;"\n'})}),"\n",(0,t.jsx)(s.p,{children:"These commands will output the path to the postgresql.conf and pg_hba.conf files, respectively."}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'sudo find / -name "pg_hba.conf" 2>/dev/null\n'})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:'sudo find / -name "postgresql.conf" 2>/dev/null\n'})}),"\n",(0,t.jsx)(s.p,{children:"These commands will search the entire filesystem for these files, excluding permission error messages."}),"\n",(0,t.jsx)(s.h2,{id:"configure-pg_hbaconf-hba-stands-for-host-based-authentication",children:"Configure pg_hba.conf (HBA stands for host-based authentication)"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-plaintext",children:"# TYPE  DATABASE  USER  ADDRESS       METHOD\nhost    all       all   ::1/128       trust\nlocal   replication     backup_user   md5 (e.g., md5 for password-based authentication)\nlocal               database  user  auth-method [auth-options]\nhost                database  user  address     auth-method  [auth-options]\nhostssl             database  user  address     auth-method  [auth-options]\nhostnossl           database  user  address     auth-method  [auth-options]\nhostgssenc          database  user  address     auth-method  [auth-options]\nhostnogssenc        database  user  address     auth-method  [auth-options]\nhost                database  user  IP-address  IP-mask      auth-method  [auth-options]\nhostssl             database  user  IP-address  IP-mask      auth-method  [auth-options]\nhostnossl           database  user  IP-address  IP-mask      auth-method  [auth-options]\nhostgssenc          database  user  IP-address  IP-mask      auth-method  [auth-options]\nhostnogssenc        database  user  IP-address  IP-mask      auth-method  [auth-options]\ninclude             file\ninclude_if_exists   file\ninclude_dir         directory\n"})}),"\n",(0,t.jsx)(s.h2,{id:"reload-postgresql-configuration",children:"Reload PostgreSQL Configuration"}),"\n",(0,t.jsx)(s.p,{children:"After making changes to pg_hba.conf, you need to reload the PostgreSQL server configuration for the changes to take effect. This can be done without restarting the database:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"SELECT pg_reload_conf();\n"})}),"\n",(0,t.jsx)(s.p,{children:"or from the command line:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"pg_ctl reload\n"})}),"\n",(0,t.jsx)(s.p,{children:"Reload PostgreSQL to apply changes:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"systemctl reload postgresql\n"})}),"\n",(0,t.jsx)(s.p,{children:"and after:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"systemctl status postgresql\n"})}),"\n",(0,t.jsx)(s.p,{children:"Check Logs:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"/var/log/postgresql/\n"})}),"\n",(0,t.jsx)(s.h2,{id:"verify-postgresql-is-listening-correctly",children:"Verify PostgreSQL is Listening Correctly"}),"\n",(0,t.jsx)(s.p,{children:"Check postgresql.conf for the listen_addresses setting:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"nano /var/lib/postgresql/15/main/postgresql.conf\n"})}),"\n",(0,t.jsx)(s.p,{children:"Make sure it's set to listen on all interfaces or specifically includes localhost or ::1:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"listen_addresses = 'localhost'  # or '127.0.0.1, ::1' or '*'\n"})})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>i});var t=n(6540);const a={},o=t.createContext(a);function r(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);